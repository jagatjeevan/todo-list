{"version":3,"sources":["services/mode.js","assets/text/en_US.js","components/ui/Info.js","components/ui/InputBox.js","components/hoc/wrapInputBox.js","components/ui/SearchBox.js","components/ui/InputWrapper.js","components/ui/Header.js","util/common.js","services/filter.js","components/ui/Filter.js","components/ui/ButtonWrapper.js","components/ui/Footer.js","components/ui/CheckBox.js","components/ui/TodoItem.js","components/ui/FilteredList.js","components/ui/TodoList.js","services/todo.js","components/wrappers/StateProvider.js","components/wrappers/KeyStrokeHandler.js","components/wrappers/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["MODE_NONE","MODE_SEARCH","MODE_CREATE","Info","props","message","mode","className","enhance","compose","withState","console","log","value","withHandlers","handleKeyUp","addNew","setValue","e","text","target","trim","keyCode","KeyCode","KEY_RETURN","handleChange","autoFocus","type","onKeyUp","onChange","placeholder","SearchBox","query","setSearchQuery","InputWrapper","Header","objectWithOnly","object","attrs","newObject","forEach","attr","bind","wrapChildrenWith","children","React","Children","map","child","cloneElement","FILTER_ACTIVE","FILTER_COMPLETED","Filter","options","getOptions","filter","changeFilter","getClass","key","Object","keys","onClick","ButtonWrapper","changeMode","isCreateMode","isSearchMode","title","Footer","count","CheckBox","state","checked","this","setState","Component","TodoItem","data","changeStatus","completed","id","FilteredList","items","length","item","TodoList","useState","onlineStatus","setOnlineStatus","list","actions","q","toLowerCase","str","substr","indexOf","search","applyFilter","onLine","navigator","updateOnlineStatus","event","window","addEventListener","todoCounter","StateProvider","updatedList","assign","concat","addToList","itemId","index","findIndex","update","$set","updateStatus","KeyStrokeHandler","removeEventListener","nextMode","current","keyPressed","KEY_SLASH","KEY_N","KEY_ESCAPE","getNextModeByKey","preventDefault","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c2c06971.chunk.js","sourcesContent":["import {KEY_SLASH, KEY_N, KEY_ESCAPE} from 'keycode-js';\n\nexport const MODE_NONE = 'none';\nexport const MODE_SEARCH = 'search';\nexport const MODE_CREATE = 'create';\n\nexport function getNextModeByKey(current, keyPressed) {\n    switch (current) {\n        case MODE_NONE:\n            if (keyPressed === KEY_SLASH) return MODE_SEARCH;\n            if (keyPressed === KEY_N) return MODE_CREATE;\n\n            break;\n\n        default:\n            if (keyPressed === KEY_ESCAPE) return MODE_NONE;\n\n    }\n\n    return current;\n}\n","export const MSG_NO_ITEMS = 'There are no items.';\nexport const INFO_SHORTCUT_KEYS = 'Press `/` to search and `N` to create a new item.';\nexport const INFO_CANCEL_SHORTCUT_KEY = 'Press `Esc` to cancel.';\n","import React from 'react';\nimport {MODE_NONE} from '../../services/mode';\nimport {INFO_SHORTCUT_KEYS, INFO_CANCEL_SHORTCUT_KEY} from '../../assets/text/en_US';\n\nexport default function Info(props) {\n    const message = props.mode === MODE_NONE ? INFO_SHORTCUT_KEYS : INFO_CANCEL_SHORTCUT_KEY;\n\n    return <p className=\"info\">{message}</p>;\n}\n","import React from 'react';\nimport enhance from '../hoc/wrapInputBox';\n\nfunction InputBox(props) {\n    const { value, handleChange, handleKeyUp } = props;\n\n    return (\n        <input autoFocus\n            type=\"text\"\n            className=\"form-control add-todo\"\n            value={value}\n            onKeyUp={handleKeyUp}\n            onChange={handleChange}\n            placeholder=\"Add New\"\n        />\n    );\n}\n\nexport default enhance(InputBox);\n","import KeyCode from 'keycode-js';\nimport { compose, withState, withHandlers } from 'recompose';\n\nexport default compose(\n    withState('value', 'setValue', props => {\n        console.log('got props', props);\n        return props.value || ''\n    }),\n    withHandlers({\n        handleKeyUp: ({ addNew, setValue }) => e => {\n            const text = e.target.value.trim();\n\n            if (e.keyCode === KeyCode.KEY_RETURN && text) {\n                addNew(text);\n                setValue('');\n            }\n        },\n        handleChange: ({ setValue }) => e => {\n            setValue(e.target.value);\n        }\n    })\n);\n","import React from 'react';\n\nexport default function SearchBox(props) {\n    const {query, setSearchQuery} = props;\n\n    return (\n        <input\n            type=\"text\" autoFocus\n            className=\"form-control search\"\n            value={query}\n            onChange={e => setSearchQuery(e.target.value)}\n            placeholder=\"Search\"\n        />\n    );\n}\n","import React from 'react';\nimport InputBox from './InputBox';\nimport SearchBox from './SearchBox';\nimport {MODE_SEARCH, MODE_CREATE} from '../../services/mode';\n\nexport default function InputWrapper(props) {\n    const {mode, addNew, query, setSearchQuery} = props;\n\n    switch (mode) {\n        case MODE_CREATE:\n            return <InputBox {...{addNew}}/>;\n\n        case MODE_SEARCH:\n            return <SearchBox {...{query, setSearchQuery}}/>;\n\n        default:\n            return null;\n    }\n}\n","import React from 'react';\nimport InputWrapper from './InputWrapper';\n\nexport default function Header(props) {\n    return (\n        <header>\n            <h1>Things To Do</h1>\n            <InputWrapper {...props}/>\n        </header>\n    );\n}\n","import React from 'react';\n\n/**\n * Returns a new object with only few attributes of the original object.\n * Note: the attributes/properties will still be bound to the old object.\n *\n * @param  {Object} object     The object.\n * @param  {Array}             Array of selected attributes.\n * @return {Object}            New object with only the selected attributes.\n */\nexport function objectWithOnly(object, attrs) {\n    let newObject = {};\n\n    attrs.forEach(attr => {\n        newObject[attr] = object[attr].bind(object);\n    });\n\n    return newObject;\n}\n\n/**\n * Wraps react children elements with props.\n */\nexport function wrapChildrenWith(children, props) {\n    return React.Children.map(children, child => React.cloneElement(child, props));\n}\n\n/**\n * Checks if the string includes the substring.\n *\n * @param  {String} str\n * @param  {String} substr\n * @return {Boolean}\n */\nexport function stringInclues(str, substr) {\n    return str.indexOf(substr) !== -1;\n}\n","import { stringInclues } from \"../util/common\";\n\nexport const FILTER_ALL = \"all\";\nexport const FILTER_ACTIVE = \"active\";\nexport const FILTER_COMPLETED = \"completed\";\nexport const FILTER_SYNCED = \"synced\";\n\nexport function applyFilter(list, filter) {\n    switch (filter) {\n        case FILTER_COMPLETED:\n            return list.filter((item) => item.completed === true);\n\n        case FILTER_ACTIVE:\n            return list.filter((item) => item.completed !== true);\n\n        default:\n            return list;\n    }\n}\n\nexport function search(list, query) {\n    let q = query.trim().toLowerCase();\n\n    return list.filter(({ text }) => stringInclues(text.toLowerCase(), q));\n}\n\nexport function getOptions() {\n    return {\n        [FILTER_ALL]: \"All\",\n        [FILTER_ACTIVE]: \"Active\",\n        [FILTER_COMPLETED]: \"Completed\",\n        [FILTER_SYNCED]: \"Synced\",\n    };\n}\n","import React from 'react';\nimport {getOptions} from '../../services/filter';\n\nexport default function Filter(props) {\n    const options = getOptions();\n    const {filter, changeFilter} = props;\n    const getClass = (key) => (key === filter ? 'selected' : '');\n\n    return (\n        <ul className=\"filters list-unstyled clearfix\">\n            {Object.keys(options).map(key => (\n                <li key={key}>\n                    <a onClick={() => changeFilter(key)} className={getClass(key)}>\n                        {options[key]}\n                    </a>\n                </li>\n            ))}\n        </ul>\n    );\n}\n","import React from 'react';\nimport {MODE_NONE, MODE_CREATE, MODE_SEARCH} from '../../services/mode';\n\nexport default function ButtonWrapper(props) {\n    const {mode, changeMode} = props;\n    const isCreateMode = () => mode === MODE_CREATE;\n    const isSearchMode = () => mode === MODE_SEARCH;\n\n    return (\n        <div>\n            <a title=\"Add New\"\n                className={'button add ' + (isCreateMode() ? 'selected' : '')}\n                onClick={() => changeMode(isCreateMode() ? MODE_NONE : MODE_CREATE)}></a>\n            <a title=\"Search\"\n                className={'button search ' + (isSearchMode() ? 'selected' : '')}\n                onClick={() => changeMode(isSearchMode() ? MODE_NONE : MODE_SEARCH)}></a>\n        </div>\n    );\n}\n","import React from 'react';\nimport Filter from './Filter';\nimport ButtonWrapper from './ButtonWrapper';\n\nexport default function Footer(props) {\n    const {count, filter, changeFilter} = props;\n\n    return (\n        <footer className=\"clearfix\">\n            <div className=\"pull-left buttons\">\n                <ButtonWrapper {...props}/>\n            </div>\n            <div className=\"pull-left\">\n                {`${count} items left`}\n            </div>\n            <div className=\"pull-right\">\n                <Filter {...{filter, changeFilter}}/>\n            </div>\n        </footer>\n    );\n}\n","import React, {Component} from 'react';\n\nclass CheckBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: this.props.checked\n        };\n    }\n\n    handleChange(e) {\n        const {checked} = e.target;\n\n        this.setState({checked});\n        this.props.onChange(checked);\n    }\n\n    render() {\n        return (<input type=\"checkbox\" checked={this.state.checked} onChange={this.handleChange.bind(this)}/>);\n    }\n}\n\nexport default CheckBox;\n","import React from 'react';\nimport CheckBox from './CheckBox';\n\nexport default function TodoItem(props) {\n    const {data, changeStatus} = props;\n    const handleChange = (checked) => changeStatus(data.id, checked);\n    const className = 'todo-item ui-state-default ' + (data.completed === true ? 'completed' : 'pending');\n\n    return (\n        <li className={className}>\n            <div className=\"checkbox\">\n                <label>\n                    <CheckBox checked={data.completed} onChange={handleChange}/> {data.text}\n                </label>\n            </div>\n        </li>\n    );\n}\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport {MSG_NO_ITEMS} from '../../assets/text/en_US';\n\nexport default function FilteredList(props) {\n    const {items, changeStatus} = props;\n\n    if (items.length === 0) {\n        return (\n            <p className=\"alert alert-info\">{MSG_NO_ITEMS}</p>\n        );\n    }\n\n    return (\n        <ul className=\"list-unstyled\">\n            {items.map(item => (\n                <TodoItem key={item.id} data={item} changeStatus={changeStatus}/>\n            ))}\n        </ul>\n    );\n}\n","import React, { useState } from \"react\";\nimport Info from \"./Info\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport FilteredList from \"./FilteredList\";\nimport { applyFilter, search } from \"../../services/filter\";\n\nexport default function TodoList(props) {\n  const [onlineStatus, setOnlineStatus] = useState(\"\");\n  const { list, filter, mode, query } = props.data;\n  const {\n    addNew,\n    changeFilter,\n    changeStatus,\n    changeMode,\n    setSearchQuery,\n  } = props.actions;\n  const count = list.length;\n  const items = search(applyFilter(list, filter), query);\n\n  const { onLine } = navigator;\n  function updateOnlineStatus(event) {\n    console.log(event);\n    if (onLine) {\n      setOnlineStatus(\"\");\n      console.log(\"It is online\");\n    } else {\n      setOnlineStatus(\"offline\");\n      console.log(\"It is offline\");\n    }\n  }\n  // Check for online / offline\n  window.addEventListener(\"online\", updateOnlineStatus);\n  window.addEventListener(\"offline\", updateOnlineStatus);\n\n  return (\n    <div className={`container ${onlineStatus}`}>\n      <div className=\"row\">\n        <div className=\"todolist\">\n          <Header {...{ addNew, mode, query, setSearchQuery }} />\n          <FilteredList {...{ items, changeStatus }} />\n          <Footer {...{ count, filter, changeFilter, mode, changeMode }} />\n          <Info {...{ mode }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import update from 'immutability-helper';\n\n/**\n * Get the list of todo items.\n * @return {Array}\n */\nexport function getAll() {\n    return [\n        {\n            id: 1,\n            text: 'Learn Javascript',\n            completed: false\n        },\n        {\n            id: 2,\n            text: 'Learn React',\n            completed: false\n        },\n        {\n            id: 3,\n            text: 'Build a React App',\n            completed: false\n        }\n    ]\n}\n\nexport function getItemById(itemId) {\n    return getAll().find(item => item.id === itemId);\n}\n\nexport function updateStatus(items, itemId, completed) {\n    let index = items.findIndex(item => item.id === itemId);\n\n    // Returns a new list of data with updated item.\n    return update(items, {\n        [index]: {\n            completed: {$set: completed}\n        }\n    });\n}\n\n/**\n * A counter to generate a unique id for a todo item.\n * Can remove this logic when the todo is created using backend/database logic.\n * @type {Number}\n */\nlet todoCounter = 1;\n\nfunction getNextId() {\n    return getAll().length + todoCounter++;\n}\n\n/**\n * Adds a new item on the list and returns the new updated list (immutable).\n *\n * @param {Array} list\n * @param {Object} data\n * @return {Array}\n */\nexport function addToList(list, data) {\n    let item = Object.assign({\n        id: getNextId()\n    }, data);\n\n    return list.concat([item]);\n}\n","import React, {Component} from 'react';\nimport {FILTER_ALL} from '../../services/filter';\nimport {MODE_CREATE, MODE_NONE} from '../../services/mode';\nimport {objectWithOnly, wrapChildrenWith} from '../../util/common';\nimport {getAll, addToList, updateStatus} from '../../services/todo';\n\nclass StateProvider extends Component {\n    constructor() {\n        super();\n        this.state = {\n            query: '',\n            mode: MODE_CREATE,\n            filter: FILTER_ALL,\n            list: getAll()\n        }\n    }\n\n    render() {\n        let children = wrapChildrenWith(this.props.children, {\n            data: this.state,\n            actions: objectWithOnly(this, ['addNew', 'changeFilter', 'changeStatus', 'changeMode', 'setSearchQuery'])\n        });\n\n        return <div>{children}</div>;\n    }\n\n    addNew(text) {\n        let updatedList = addToList(this.state.list, {text, completed: false});\n\n        this.setState({list: updatedList});\n    }\n\n    changeFilter(filter) {\n        this.setState({filter});\n    }\n\n    changeStatus(itemId, completed) {\n        const updatedList = updateStatus(this.state.list, itemId, completed);\n\n        this.setState({list: updatedList});\n    }\n\n    changeMode(mode = MODE_NONE) {\n        this.setState({mode});\n    }\n\n    setSearchQuery(text) {\n        this.setState({query: text || ''});\n    }\n}\n\nexport default StateProvider;\n","import React, {Component} from 'react';\nimport {getNextModeByKey} from '../../services/mode';\nimport {wrapChildrenWith} from '../../util/common';\n\nclass KeyStrokeHandler extends Component {\n    componentWillMount() {\n        window.addEventListener('keydown', this.handleKeyUp.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyUp);\n    }\n\n    handleKeyUp(e) {\n        const {mode} = this.props.data;\n        const nextMode = getNextModeByKey(mode, e.keyCode);\n\n        if (nextMode !== mode) {\n            e.preventDefault();\n            this.props.actions.changeMode(nextMode);\n        }\n    }\n\n    render() {\n        return <div>{wrapChildrenWith(this.props.children, this.props)}</div>;\n    }\n}\n\nexport default KeyStrokeHandler;\n","import React, {Component} from 'react';\nimport TodoList from '../ui/TodoList';\nimport StateProvider from './StateProvider';\nimport KeyStrokeHandler from './KeyStrokeHandler';\n\nclass App extends Component {\n    render() {\n        return (\n            <StateProvider>\n                <KeyStrokeHandler>\n                    <TodoList/>\n                </KeyStrokeHandler>\n            </StateProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/wrappers/App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Add bootstrap\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// Add our style\nimport \"./assets/style/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}